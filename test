#!/usr/bin/env python3

from html.parser import HTMLParser
import socket
import ssl

class FlagHTMLParser(HTMLParser):
    def __init__(self):
        HTMLParser.__init__(self)
        self.flag_set = set()
        
    def handle_data(self, data: str) -> None:
        if data.find('FLAG') >= 0:
            flag = data.split(" ")[1]
            if (flag not in self.flag_set):
                self.flag_set.add(flag)
                print(flag)

# flag = f"<html><header></header><h3>gaymen</h3><h3 class='secret_flag' style='color:red'>FLAG: 64-characters-of-random-alphanumerics</h3><h3 class='secret_flag' style='color:red'>FLAG: 64-characters-of-random-alphanumerics</h3><h3 class='secret_flag' style='color:red'>FLAG: second_flag</h3></html>"
# FlagHTMLParser().feed(flag)

DEFAULT_SERVER = "www.3700.network"
DEFAULT_PORT = 443

mysocket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
context = ssl.create_default_context()
mysocket = context.wrap_socket(mysocket, server_hostname=DEFAULT_SERVER)
mysocket.connect((DEFAULT_SERVER, DEFAULT_PORT))

request = f'GET / HTTP/1.0\r\nHost: {DEFAULT_SERVER}:{DEFAULT_PORT}\r\n\r\n'
print(request)
mysocket.send(request.encode('ascii'))
data = mysocket.recv(1000).decode("utf-8")
while data.find("</html>") == -1 and data.find('close') == -1:
    data += mysocket.recv(1000).decode("utf-8")
print(data)
header_and_response = data.split("\r\n\r\n")